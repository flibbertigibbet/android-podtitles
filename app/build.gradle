apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs"
apply plugin: "kotlin-parcelize"

android {
    compileSdk 32

    defaultConfig {
        applicationId "dev.banderkat.podtitles"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Room schema export directory
        javaCompileOptions{
            annotationProcessorOptions{
                arguments= ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        buildConfig false
        viewBinding true
    }
    sourceSets {
        main {
            assets.srcDirs += "$buildDir/generated/assets"
        }
    }
}

dependencies {
    // ExoPlayer media player
    def media3_version = "1.0.0-beta01"
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    implementation "androidx.media3:media3-ui:$media3_version"
    implementation "androidx.media3:media3-session:$media3_version"
    implementation "androidx.media3:media3-decoder:$media3_version"
    implementation "androidx.media3:media3-datasource:$media3_version"
    implementation "androidx.media3:media3-common:$media3_version"
    implementation "androidx.media3:media3-exoplayer-workmanager:$media3_version"

    // ffmpeg for conversion to wav (format required by Vosk)
    implementation "com.arthenica:ffmpeg-kit-audio:4.5.1-1.LTS"

    // Vosk on-device transcription
    // TODO: add { transitive = true } to these aar dependencies? can jna then be omitted?
    implementation "com.alphacephei:vosk-android:0.3.38@aar"
    implementation "net.java.dev.jna:jna:5.12.1@aar"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // Moshi
    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.8.0"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.retrofit2:converter-moshi:2.5.0"
    implementation "com.squareup.retrofit2:converter-scalars:2.5.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // WorkManager
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"

    // Room
    def room_version = "2.5.0-alpha02"

    // Kotlin reflection, for dynamic object construction from XML
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.10"

    // for CircularDrawable
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation("androidx.room:room-ktx:$room_version")
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    implementation "androidx.core:core-ktx:1.8.0"
    implementation "androidx.appcompat:appcompat:1.4.2"
    implementation "com.google.android.material:material:1.6.1"
    implementation "androidx.fragment:fragment-ktx:1.5.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    // Utilities for testing media components (including ExoPlayer components)
    implementation "androidx.media3:media3-test-utils:$media3_version"
    // Utilities for testing media components (including ExoPlayer components) via Robolectric
    implementation "androidx.media3:media3-test-utils-robolectric:$media3_version"
    testImplementation "androidx.room:room-testing:$room_version"
}

// generate the UUID file required by Vosk to unpack the model
tasks.register("genUUID") {
    def uuid = UUID.randomUUID().toString()
    def odir = file("$buildDir/generated/assets/model-en-us")
    def ofile = file("$odir/uuid")
    doLast {
        mkdir odir
        ofile.text = uuid
    }
}

preBuild.dependsOn(genUUID)
